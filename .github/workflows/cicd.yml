name: cicd

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build & Push image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set YML
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
          find src

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/dive2025:latest .

      - name: Push Docker
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/dive2025:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set target IP
        run: |
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" "http://${{ secrets.PAW_ON_SERVER_IP }}/env") || true
          if [ "$STATUS" = "200" ]; then
            CURRENT_UPSTREAM=$(curl -s "http://${{ secrets.PAW_ON_SERVER_IP }}/env")
          else
            CURRENT_UPSTREAM=green
          fi
          
          echo "CURRENT_UPSTREAM=$CURRENT_UPSTREAM" >> "$GITHUB_ENV"

          if [ "$CURRENT_UPSTREAM" = "blue" ]; then
            echo "CURRENT_PORT=8080"    >> "$GITHUB_ENV"
            echo "STOPPED_PORT=8081"   >> "$GITHUB_ENV"
            echo "TARGET_UPSTREAM=green" >> "$GITHUB_ENV"
            echo "NEW_PORT=8081"       >> "$GITHUB_ENV"
          elif [ "$CURRENT_UPSTREAM" = "green" ]; then
            echo "CURRENT_PORT=8081"    >> "$GITHUB_ENV"
            echo "STOPPED_PORT=8080"   >> "$GITHUB_ENV"
            echo "TARGET_UPSTREAM=blue"  >> "$GITHUB_ENV"
            echo "NEW_PORT=8080"       >> "$GITHUB_ENV"
          else
            echo "error"; exit 1
          fi

      - name: EC2 ssh & make container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PAW_ON_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            cd /home/ubuntu/deploy
            if [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
              echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            fi
            (docker-compose -f "docker-compose-${{ env.TARGET_UPSTREAM }}.yml" pull && \
             docker-compose -f "docker-compose-${{ env.TARGET_UPSTREAM }}.yml" up -d)

      - name: Health check (new app)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PAW_ON_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            tries=0
            until curl -fs "http://127.0.0.1:${{ env.NEW_PORT }}/env" >/dev/null; do
              tries=$((tries+1))
              if [ $tries -ge 12 ]; then
                echo "Health check failed"; exit 1
              fi
              echo "Waiting health... ($tries/12)"; sleep 5
            done
            echo "New ${{ env.TARGET_UPSTREAM }} is healthy."

      - name: Switch Nginx to target color
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PAW_ON_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            docker exec -i my-nginx sh -lc \
              'echo "set \$service_url ${{ env.TARGET_UPSTREAM }};" > /etc/nginx/conf.d/service-env.inc && nginx -t && nginx -s reload'

      - name: Stop current server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PAW_ON_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            sudo docker stop ${{env.CURRENT_UPSTREAM}} || true
            docker rm -f ${{env.CURRENT_UPSTREAM}} || true

